# =====================================================
# RPI용 TimescaleDB + pg_vector PostgreSQL 설정
# =====================================================

# 기본 설정
listen_addresses = '*'
port = 5432
max_connections = 100

# 메모리 설정 (RPI 최적화)
shared_buffers = 256MB
effective_cache_size = 1GB
work_mem = 4MB
maintenance_work_mem = 64MB

# WAL 설정
wal_level = replica
max_wal_size = 1GB
min_wal_size = 80MB
checkpoint_completion_target = 0.9
wal_buffers = 16MB

# 로깅 설정
log_destination = 'stderr'
logging_collector = on
log_directory = 'log'
log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'
log_rotation_age = 1d
log_rotation_size = 100MB
log_min_duration_statement = 1000
log_checkpoints = on
log_connections = on
log_disconnections = on
log_lock_waits = on
log_temp_files = 0

# 통계 설정
track_activities = on
track_counts = on
track_io_timing = on
track_functions = all
track_activity_query_size = 1024

# 자동 통계 수집
autovacuum = on
autovacuum_max_workers = 3
autovacuum_naptime = 1min
autovacuum_vacuum_threshold = 50
autovacuum_analyze_threshold = 50

# 타임아웃 설정
statement_timeout = 30min
idle_in_transaction_session_timeout = 10min
lock_timeout = 1min

# 확장 설정
shared_preload_libraries = 'timescaledb,vector'

# TimescaleDB 설정
timescaledb.max_background_workers = 8
timescaledb.license = 'timescale'

# pg_vector 설정
vector.max_dimensions = 2000

# 성능 최적화
random_page_cost = 1.1
effective_io_concurrency = 200
max_worker_processes = 4
max_parallel_workers_per_gather = 2
max_parallel_workers = 4
max_parallel_maintenance_workers = 2
